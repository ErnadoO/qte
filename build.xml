<?xml version="1.0" encoding="utf-8"?>
<project name="Quick title Edition" basedir="." default="main">

    <property name="builddir" value="build" />
    <property name="source" value="." />
    <property name="testdir" value="tests" />

    <fileset id="php-files" dir="${project.basedir}">
        <include name="**/*.php"/>
        <exclude name="build/**"/>
        <exclude name="tests/**"/>
		<exclude name="vendor/**"/>
    </fileset>

    <!-- ============================================  -->
    <!-- (DEFAULT) Target: main                        -->
    <!-- ============================================  -->
    <target name="main" description="Start analyzing our application">
        <echo msg="Start Build" />

        <phingCall target="prepare" />
        <!-- <phingCall target="phpunit" /> -->
        <phingCall target="pdepend" />
        <phingCall target="phpmd" />
        <phingCall target="phpcpd" />
        <phingCall target="phpdoc" />
        <phingCall target="phpcs" />
        <phingCall target="phploc" />
        <phingCall target="phpcb" />

        <echo msg="Finished Build" />
    </target>

    <!-- ============================================  -->
    <!-- (DEFAULT) Target: prepare                     -->
    <!-- ============================================  -->
    <target name="prepare" >
        <echo msg="Making directory build" />

        <delete dir="${builddir}/api" includeemptydirs="true" />
        <delete dir="${builddir}/code-browser" includeemptydirs="true" />
        <delete dir="${builddir}/coverage" includeemptydirs="true"  />
        <delete dir="${builddir}/logs" includeemptydirs="true" />
        <delete dir="${builddir}/pdepend" includeemptydirs="true" />

        <mkdir dir="${builddir}/api"/>
        <mkdir dir="${builddir}/api/docblox"/>
        <mkdir dir="${builddir}/code-browser"/>
        <mkdir dir="${builddir}/coverage"/>
        <mkdir dir="${builddir}/logs"/>
        <mkdir dir="${builddir}/pdepend"/>
    </target>

    <!-- ============================================  -->
    <!-- Target: Unit test                             -->
    <!-- ============================================  -->
    <target name="phpunit" description="Run unit tests using PHPUnit and generates junit.xml and clover.xml">
        <echo msg="Beginning of the tests" />
        <exec command="phpunit --bootstrap=${testdir}/bootstrap.php
                             --configuration ${testdir}/phpunit.xml
                             --log-junit ${builddir}/logs/junit.xml
                             --coverage-clover ${builddir}/logs/clover.xml
                             --coverage-html ${builddir}/coverage/
                             ${testdir}"
            />
    </target>

    <!-- ============================================  -->
    <!-- Target: PHP Depend                            -->
    <!-- ============================================  -->
    <target name="pdepend" description="Calculate dependencies of the code base">
		<phpdepend>
			<fileset refid="php-files"/>
			<logger type="jdepend-xml" outfile="${builddir}/logs/jdepend.xml" />
			<logger type="jdepend-chart" outfile="${builddir}/pdepend/dependencies.svg" />
			<logger type="overview-pyramid" outfile="${builddir}/pdepend/overview-pyramid.svg" />
		</phpdepend>
    </target>

    <!-- ============================================  -->
    <!-- Target: PHPMD (Project Mess Detector)         -->
    <!-- ============================================  -->
    <target name="phpmd" description="Generate pmd.xml using PHPMD">
        <exec command="phpmd ${source} xml codesize,unusedcode --reportfile ${builddir}/phpmd.xml --exclude travis,tests,build,vendor" escape="false" />
    </target>

    <!-- ============================================  -->
    <!-- Target: PHPCPD (Copy/Paste Detector)          -->
    <!-- ============================================  -->
    <target name="phpcpd" description="Copy/Paste Detection">
		<phpcpd>
		   <fileset refid="php-files"/>
		   <formatter type="pmd" outfile="${builddir}/logs/pmd-cpd.xml"/>
		 </phpcpd> 
    </target>

    <!-- ============================================  -->
    <!-- Target: PHPCS (PHP Code Sniffer)              -->
    <!-- ============================================  -->
    <target name="phpcs" description="Coding Standards Analysis">
        <exec command="../../phpbb/phpBB/vendor/bin/phpcs --standard=../../code_sniffer/ruleset-php-extensions.xml
                             --report=checkstyle
                             --report-file=${builddir}/logs/checkstyle.xml
                             --ignore=travis,tests,build,vendor
                             --extensions=php
                             ${source}"
              escape="false" />
    </target>

    <!-- ============================================  -->
    <!-- Target: PHPDoc                               -->
    <!-- ============================================  -->
	<target name="phpdoc">
		<phpdoc title="API Documentation" destdir="${builddir}/api/docblox" sourcecode="false" output="HTML:Smarty:PHP">
			<fileset dir="${project.basedir}/${source}">
				<include name="**/*.php"/>
			</fileset>
			<projdocfileset dir=".">
				<include name="README"/>
				<include name="INSTALL"/>
				<include name="CHANGELOG"/>
			</projdocfileset>
		</phpdoc>
	</target>

    <!-- ============================================  -->
    <!-- Target: PHPLoc (PHP Lines of Code)              -->
    <!-- ============================================  -->
    <target name="phploc" description="Generate phploc.csv">
		<phploc reportType="csv" reportName="phploc" reportDirectory="${builddir}/logs">
            <fileset refid="php-files"/>
        </phploc>
    </target>

    <!-- ============================================  -->
    <!-- Target: PHPCB (PHP Code Browser)              -->
    <!-- ============================================  -->
    <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
        <exec command="phpcb --log    ${builddir}/logs
              --ignore travis,tests,build,vendor
              --source ${source}
              --output ${builddir}/code-browser" />
    </target>

</project>
